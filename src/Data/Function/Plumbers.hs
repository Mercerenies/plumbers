{-# LANGUAGE TemplateHaskell #-}
-----------------------------------------------------------------------------
-- |
-- Module      :  Data.Function.Plumbers.TH
-- Copyright   :  (c) 2012 Michael Sloan 
-- License     :  BSD-style (see the LICENSE file)
-- Maintainer  :  Michael Sloan <mgsloan@gmail.com>
-- Stability   :  experimental
-- Portability :  GHC only
--
-- This module exports 680 operators, all "pointless" combinators for composing
-- functions together with additional plumbing.
--
-----------------------------------------------------------------------------
module Data.Function.Plumbers where

import Prelude hiding ((**))

import Data.Function.Plumbers.TH
import Language.Haskell.TH

$(implementPlumbers $ PlumberSpec
  { plumberOpE        = (\l r -> InfixE (Just l) (mkVE "$") (Just r))
  , plumberLeftTypes  = (++ ["r2"])
  , plumberRightTypes = id
  , plumberResultType = mkVT "r1"
  , plumberArity      = 4
  , plumberPrefix     = "$"
  } )

-- http://hackage.haskell.org/trac/ghc/ticket/1541
infixr 9 $^, $<, $>, $&, $*
infixr 9 $^^, $^<, $^>, $^&, $^*, $<^, $<<, $<>, $<&, $<*, $>^, $><, $>>, $>&, $>*, $&^, $&<, $&>, $&&, $&*, $*^, $*<, $*>, $*&, $**
infixr
infixr


$(implementPlumbers $ PlumberSpec
  { plumberOpE        = (\l r -> TupE [l, r]) 
  , plumberLeftTypes  = id
  , plumberRightTypes = id
  , plumberResultType = tuplesT [mkVT "r1", mkVT "r2"]
  , plumberArity      = 4
  , plumberPrefix     = "*"
  } )

-- http://hackage.haskell.org/trac/ghc/ticket/1541
infixr 9 *^, *<, *>, *&, **
infixr 9 *^^, *^<, *^>, *^&, *^*, *<^, *<<, *<>, *<&, *<*, *>^, *><, *>>, *>&, *>*, *&^, *&<, *&>, *&&, *&*, **^, **<, **>, **&, ***
infixr
infixr 9 *^^^^, *^^^<, *^^^>, *^^^&, *^^^*, *^^<^, *^^<<, *^^<>, *^^<&, *^^<*, *^^>^, *^^><, *^^>>, *^^>&, *^^>*, *^^&^, *^^&<, *^^&>, *^^&&, *^^&*, *^^*^, *^^*<, *^^*>, *^^*&, *^^**, *^<^^, *^<^<, *^<^>, *^<^&, *^<^*, *^<<^, *^<<<, *^<<>, *^<<&, *^<<*, *^<>^, *^<><, *^<>>, *^<>&, *^<>*, *^<&^, *^<&<, *^<&>, *^<&&, *^<&*, *^<*^, *^<*<, *^<*>, *^<*&, *^<**, *^>^^, *^>^<, *^>^>, *^>^&, *^>^*, *^><^, *^><<, *^><>, *^><&, *^><*, *^>>^, *^>><, *^>>>, *^>>&, *^>>*, *^>&^, *^>&<, *^>&>, *^>&&, *^>&*, *^>*^, *^>*<, *^>*>, *^>*&, *^>**, *^&^^, *^&^<, *^&^>, *^&^&, *^&^*, *^&<^, *^&<<, *^&<>, *^&<&, *^&<*, *^&>^, *^&><, *^&>>, *^&>&, *^&>*, *^&&^, *^&&<, *^&&>, *^&&&, *^&&*, *^&*^, *^&*<, *^&*>, *^&*&, *^&**, *^*^^, *^*^<, *^*^>, *^*^&, *^*^*, *^*<^, *^*<<, *^*<>, *^*<&, *^*<*, *^*>^, *^*><, *^*>>, *^*>&, *^*>*, *^*&^, *^*&<, *^*&>, *^*&&, *^*&*, *^**^, *^**<, *^**>, *^**&, *^***, *<^^^, *<^^<, *<^^>, *<^^&, *<^^*, *<^<^, *<^<<, *<^<>, *<^<&, *<^<*, *<^>^, *<^><, *<^>>, *<^>&, *<^>*, *<^&^, *<^&<, *<^&>, *<^&&, *<^&*, *<^*^, *<^*<, *<^*>, *<^*&, *<^**, *<<^^, *<<^<, *<<^>, *<<^&, *<<^*, *<<<^, *<<<<, *<<<>, *<<<&, *<<<*, *<<>^, *<<><, *<<>>, *<<>&, *<<>*, *<<&^, *<<&<, *<<&>, *<<&&, *<<&*, *<<*^, *<<*<, *<<*>, *<<*&, *<<**, *<>^^, *<>^<, *<>^>, *<>^&, *<>^*, *<><^, *<><<, *<><>, *<><&, *<><*, *<>>^, *<>><, *<>>>, *<>>&, *<>>*, *<>&^, *<>&<, *<>&>, *<>&&, *<>&*, *<>*^, *<>*<, *<>*>, *<>*&, *<>**, *<&^^, *<&^<, *<&^>, *<&^&, *<&^*, *<&<^, *<&<<, *<&<>, *<&<&, *<&<*, *<&>^, *<&><, *<&>>, *<&>&, *<&>*, *<&&^, *<&&<, *<&&>, *<&&&, *<&&*, *<&*^, *<&*<, *<&*>, *<&*&, *<&**, *<*^^, *<*^<, *<*^>, *<*^&, *<*^*, *<*<^, *<*<<, *<*<>, *<*<&, *<*<*, *<*>^, *<*><, *<*>>, *<*>&, *<*>*, *<*&^, *<*&<, *<*&>, *<*&&, *<*&*, *<**^, *<**<, *<**>, *<**&, *<***, *>^^^, *>^^<, *>^^>, *>^^&, *>^^*, *>^<^, *>^<<, *>^<>, *>^<&, *>^<*, *>^>^, *>^><, *>^>>, *>^>&, *>^>*, *>^&^, *>^&<, *>^&>, *>^&&, *>^&*, *>^*^, *>^*<, *>^*>, *>^*&, *>^**, *><^^, *><^<, *><^>, *><^&, *><^*, *><<^, *><<<, *><<>, *><<&, *><<*, *><>^, *><><, *><>>, *><>&, *><>*, *><&^, *><&<, *><&>, *><&&, *><&*, *><*^, *><*<, *><*>, *><*&, *><**, *>>^^, *>>^<, *>>^>, *>>^&, *>>^*, *>><^, *>><<, *>><>, *>><&, *>><*, *>>>^, *>>><, *>>>>, *>>>&, *>>>*, *>>&^, *>>&<, *>>&>, *>>&&, *>>&*, *>>*^, *>>*<, *>>*>, *>>*&, *>>**, *>&^^, *>&^<, *>&^>, *>&^&, *>&^*, *>&<^, *>&<<, *>&<>, *>&<&, *>&<*, *>&>^, *>&><, *>&>>, *>&>&, *>&>*, *>&&^, *>&&<, *>&&>, *>&&&, *>&&*, *>&*^, *>&*<, *>&*>, *>&*&, *>&**, *>*^^, *>*^<, *>*^>, *>*^&, *>*^*, *>*<^, *>*<<, *>*<>, *>*<&, *>*<*, *>*>^, *>*><, *>*>>, *>*>&, *>*>*, *>*&^, *>*&<, *>*&>, *>*&&, *>*&*, *>**^, *>**<, *>**>, *>**&, *>***, *&^^^, *&^^<, *&^^>, *&^^&, *&^^*, *&^<^, *&^<<, *&^<>, *&^<&, *&^<*, *&^>^, *&^><, *&^>>, *&^>&, *&^>*, *&^&^, *&^&<, *&^&>, *&^&&, *&^&*, *&^*^, *&^*<, *&^*>, *&^*&, *&^**, *&<^^, *&<^<, *&<^>, *&<^&, *&<^*, *&<<^, *&<<<, *&<<>, *&<<&, *&<<*, *&<>^, *&<><, *&<>>, *&<>&, *&<>*, *&<&^, *&<&<, *&<&>, *&<&&, *&<&*, *&<*^, *&<*<, *&<*>, *&<*&, *&<**, *&>^^, *&>^<, *&>^>, *&>^&, *&>^*, *&><^, *&><<, *&><>, *&><&, *&><*, *&>>^, *&>><, *&>>>, *&>>&, *&>>*, *&>&^, *&>&<, *&>&>, *&>&&, *&>&*, *&>*^, *&>*<, *&>*>, *&>*&, *&>**, *&&^^, *&&^<, *&&^>, *&&^&, *&&^*, *&&<^, *&&<<, *&&<>, *&&<&, *&&<*, *&&>^, *&&><, *&&>>, *&&>&, *&&>*, *&&&^, *&&&<, *&&&>, *&&&&, *&&&*, *&&*^, *&&*<, *&&*>, *&&*&, *&&**, *&*^^, *&*^<, *&*^>, *&*^&, *&*^*, *&*<^, *&*<<, *&*<>, *&*<&, *&*<*, *&*>^, *&*><, *&*>>, *&*>&, *&*>*, *&*&^, *&*&<, *&*&>, *&*&&, *&*&*, *&**^, *&**<, *&**>, *&**&, *&***, **^^^, **^^<, **^^>, **^^&, **^^*, **^<^, **^<<, **^<>, **^<&, **^<*, **^>^, **^><, **^>>, **^>&, **^>*, **^&^, **^&<, **^&>, **^&&, **^&*, **^*^, **^*<, **^*>, **^*&, **^**, **<^^, **<^<, **<^>, **<^&, **<^*, **<<^, **<<<, **<<>, **<<&, **<<*, **<>^, **<><, **<>>, **<>&, **<>*, **<&^, **<&<, **<&>, **<&&, **<&*, **<*^, **<*<, **<*>, **<*&, **<**, **>^^, **>^<, **>^>, **>^&, **>^*, **><^, **><<, **><>, **><&, **><*, **>>^, **>><, **>>>, **>>&, **>>*, **>&^, **>&<, **>&>, **>&&, **>&*, **>*^, **>*<, **>*>, **>*&, **>**, **&^^, **&^<, **&^>, **&^&, **&^*, **&<^, **&<<, **&<>, **&<&, **&<*, **&>^, **&><, **&>>, **&>&, **&>*, **&&^, **&&<, **&&>, **&&&, **&&*, **&*^, **&*<, **&*>, **&*&, **&**, ***^^, ***^<, ***^>, ***^&, ***^*, ***<^, ***<<, ***<>, ***<&, ***<*, ***>^, ***><, ***>>, ***>&, ***>*, ***&^, ***&<, ***&>, ***&&, ***&*, ****^, ****<, ****>, ****&, *****